name: loki-tests

on:
  workflow_call:
    inputs:
      commit_sha:
        required: true
        type: string

jobs:
  loki-tests:
    strategy:
      fail-fast: false
      matrix:
        loki_configuration: ['laptop', 'iphone7']
        loki_test_group: ['Components/[A-M]', 'Components/[N-Z]']

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: download all artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-${{ inputs.commit_sha }}
          path: ./packages

      - name: Read .nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvmrc

      - name: setup node ${{ steps.nvmrc.outputs.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvmrc.outputs.NODE_VERSION }}'
          registry-url: 'https://registry.npmjs.org'

      # Github cache
      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: restore yarn cache
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-cache-folder-

      - name: restore lerna
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: yarn-node_modules-folder-${{ hashFiles('**/yarn.lock') }}

      - name: install dependencies for visual testing
        run: |
          sudo apt update
          sudo apt install graphicsmagick -y
          yarn add loki@0.32.0
        working-directory: ./packages/react

      - name: Sanitize artifact name. Backslash not allowed
        id: sanitize_artifact_name
        run: echo ::set-output name=value::$(echo '${{ matrix.loki_test_group }}' | tr '/' '_')

      - name: visually test react package with ${{ matrix.loki_configuration }}
        run: ./node_modules/.bin/loki test --requireReference --verboseRenderer --reactUri file:./storybook-static --storiesFilter ${{ matrix.loki_test_group }} ${{ matrix.loki_configuration }}
        working-directory: ./packages/react

      - name: upload reference and actual images with ${{ matrix.loki_configuration }} and ${{ matrix.loki_test_group }} in case of failure
        uses: actions/upload-artifact@v4
        with:
          name: loki_images_${{ matrix.loki_configuration }}_${{ steps.sanitize_artifact_name.outputs.value }}
          path: ./packages/react/.loki/difference/*.*
          include-hidden-files: true
        if: failure()
