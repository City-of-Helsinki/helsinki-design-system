# this is reference workflow to run e2e tests and get test results
name: e2e-tests

on:
  workflow_call:
    inputs:
      commit_sha:
        required: true
        type: string

jobs:
  e2e-tests:
    # needs to match the playwright-docker image version
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: download all artifacts
        uses: actions/download-artifact@v5
        with:
          name: build-${{ inputs.commit_sha }}
          path: ./packages

      - name: Read .nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvmrc

      - name: setup node ${{ steps.nvmrc.outputs.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvmrc.outputs.NODE_VERSION }}'
          registry-url: 'https://registry.npmjs.org'
      
      # Github cache
      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: restore yarn cache
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-cache-folder-

      - name: restore lerna
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: yarn-node_modules-folder-${{ hashFiles('**/yarn.lock') }}

      - name: install e2e dependencies
        run: |
          yarn config set network-timeout 300000 
          yarn
        working-directory: ./e2e

      - name: install playwright browser and OS dependencies
        run: |
          yarn playwright-install
        working-directory: ./e2e

      - name: run tests
        run: |
          yarn start
        env:
          E2E_TESTS_ENV_URL: 'https://hds.hel.fi'
        working-directory: ./e2e

      - name: upload test results in case of failure
        uses: actions/upload-artifact@v4
        with:
          name: e2e_test_report
          path: e2e/report/
          include-hidden-files: true
        if: failure()

      - name: upload screenshot differences in case of failure
        uses: actions/upload-artifact@v4
        with:
          name: e2e_test_results
          path: e2e/test-results/
        if: failure()

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            e2e/report/**/*.xml
