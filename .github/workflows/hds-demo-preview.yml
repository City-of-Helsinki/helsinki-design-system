name: hds-demo-preview

on:
  pull_request:
    branches:
      - development


jobs:
 build_and_publish_demo:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    env:
      PATH_PREFIX: "/hds-demo/pr_${{ github.event.number }}"

    steps:
      - name: Checkout code hds
        uses: actions/checkout@v4

      - name: Read .nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvmrc

      - name: setup node ${{ steps.nvmrc.outputs.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvmrc.outputs.NODE_VERSION }}'
          registry-url: 'https://registry.npmjs.org'

      # Github cache
      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
        
      - name: restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-cache-folder-

      - name: restore lerna
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: yarn-node_modules-folder-${{ hashFiles('**/yarn.lock') }}

      - name: install dependencies
        run: |
          yarn config set network-timeout 300000 
          yarn

      # Build
      - name: build design tokens package
        run: yarn build
        working-directory: ./packages/design-tokens

      - name: build core package
        run: yarn build
        working-directory: ./packages/core

      - name: build react package
        run: yarn build
        working-directory: ./packages/react

      - name: build hds-js package
        run: yarn build:hds-js
        working-directory: ./packages/react

      - name: build site package
        run: yarn build --prefix-paths
        working-directory: ./site

      # Publish to hds-demo
      - name: Checkout code hds-demo
        uses: actions/checkout@v4
        with:
          repository: City-of-Helsinki/hds-demo
          path: hds-demo
          ssh-key: ${{ secrets.HDSDEMO_SSH_DEPLOY_KEY }}

      - name: Clean old directory
        run: |
          rm -fr ./hds-demo/pr_${{ github.event.number }}
          rm -fr ./hds-demo/docs/pr_${{ github.event.number }}
          mkdir -p ./hds-demo/docs/pr_${{ github.event.number }}

      - name: Copy build results
        run: cp -r ./site/public/* ./hds-demo/docs/pr_${{ github.event.number }}

      - name: Commit 
        run: |
          git config --global user.email "hds@hel.fi"
          git config --global user.name "Github Actions"
          git status
          git add .
          git commit -m "Updated pr ${{ github.event.number }}"
          git status
          git push
        working-directory: ./hds-demo
