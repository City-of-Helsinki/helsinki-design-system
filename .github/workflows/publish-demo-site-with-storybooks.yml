name: publish-demo-site-with-storybooks

on:
  workflow_call:
    inputs:
      commit_sha:
        required: true
        type: string
      build_single_version:
        required: false
        type: boolean
        default: false

    secrets:
      HDSDEMO_SSH_DEPLOY_KEY:
        required: true

jobs:
  publish-demo-site-with-storybooks:
    runs-on: ubuntu-latest
    concurrency:
      group: hds-demo-${{ github.ref }}

    env:
      PATH_PREFIX: "/hds-demo/preview_${{ github.event.number != '' && github.event.number || github.ref_name }}"
      DEMO_NAME: preview_${{ github.event.number != '' && github.event.number || github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: download all artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-${{ inputs.commit_sha }}
          path: ./packages

      - name: Read .nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvmrc
  
      - name: setup node ${{ steps.nvmrc.outputs.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvmrc.outputs.NODE_VERSION }}'
          registry-url: 'https://registry.npmjs.org'

      # Github cache
      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: restore yarn cache
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-cache-folder-

      - name: restore lerna
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: yarn-node_modules-folder-${{ hashFiles('**/yarn.lock') }}

      - name: install dependencies
        run: |
          yarn config set network-timeout 300000 
          yarn

      # Build site
      - name: build site package
        run: yarn ${{ inputs.build_single_version && 'build-single-version' || 'build' }} --prefix-paths
        working-directory: ./site

      - name: move core storybook under site
        run: mkdir ./site/public/storybook && mv ./packages/core/storybook-static $_/core

      - name: move react storybook under site
        run: mv ./packages/react/storybook-static ./site/public/storybook/react

      # Publish to hds-demo
      - name: Checkout code hds-demo
        uses: actions/checkout@v4
        with:
          repository: City-of-Helsinki/hds-demo
          path: hds-demo
          ssh-key: ${{ secrets.HDSDEMO_SSH_DEPLOY_KEY }}

      - name: Clean old directory
        run: |
          rm -fr ./hds-demo/docs/$DEMO_NAME
          mkdir -p ./hds-demo/docs/$DEMO_NAME

      - name: Copy build results
        run: cp -r ./site/public/* ./hds-demo/docs/$DEMO_NAME

      - name: Commit
        run: |
          git config --global user.email "hds@hel.fi"
          git config --global user.name "Github Actions"
          git status
          git add .
          git commit -m "chore: hds-demo-previewworkflow updated preview to $DEMO_NAME"
          git status
          git pull --rebase || (sleep 20 && git pull --rebase)
          git push
        working-directory: ./hds-demo

      - name: Preview url to PR comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Preview url
          message: |
            Preview found from [hds-demo docs/${{ env.DEMO_NAME }}](https://github.com/City-of-Helsinki/hds-demo/tree/main/docs/${{ env.DEMO_NAME }})
            ## Demos
            [Docs](https://city-of-helsinki.github.io/hds-demo/${{ env.DEMO_NAME }})
            [Core Storybook](https://city-of-helsinki.github.io/hds-demo/${{ env.DEMO_NAME }}/storybook/core)
            [React Storybook](https://city-of-helsinki.github.io/hds-demo/${{ env.DEMO_NAME }}/storybook/react)
