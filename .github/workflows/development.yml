name: development

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1

      - name: Git LFS Pull
        run: git lfs pull

      - name: setup node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"
      
      - name: install dependencies
        run: yarn

      - name: build design tokens package
        run: yarn build
        working-directory: ./packages/design-tokens

      - name: build core package
        run: yarn build
        working-directory: ./packages/core

      - name: build react package
        run: yarn build
        working-directory: ./packages/react

      - name: test react package
        run: yarn test
        working-directory: ./packages/react
      
      - name: build storybook for react
        if: ${{ !(contains(github.head_ref, 'hotfix') || contains(github.ref, 'hotfix')) }}
        run: yarn build-storybook
        working-directory: ./packages/react

      - name: Store storybook as artifact
        if: ${{ !(contains(github.head_ref, 'hotfix') || contains(github.ref, 'hotfix')) }}
        uses: actions/upload-artifact@v2
        with:
          name: storybook-${{ github.sha }}
          path: |
            packages/react/.loki
            packages/react/storybook-static
            packages/react/.lokirc.json
          retention-days: 1

  visual-tests: 
    needs: build-test
    # No visual testing in hotfixes
    if: ${{ !(contains(github.head_ref, 'hotfix') || contains(github.ref, 'hotfix')) }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        loki_configuration: [ 'laptop', 'iphone7']
        loki_test_group: [ 'Components/[A-M]', 'Components/[N-Z]']

    steps:
      - name: download storybook
        uses: actions/download-artifact@v2
        with:
          name: storybook-${{ github.sha }}

      - name: setup node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"

      - name: install dependencies for visual testing
        run: |
          sudo apt update
          sudo apt install graphicsmagick -y
          yarn add loki@0.26.0

      - name: visually test react package with ${{ matrix.loki_configuration }}
        run: ./node_modules/.bin/loki test --requireReference --verboseRenderer --reactUri file:./storybook-static --storiesFilter ${{ matrix.loki_test_group }} ${{ matrix.loki_configuration }}

      - name: upload reference and actual images with ${{ matrix.loki_configuration }} and ${{ matrix.loki_test_group }} in case of failure
        uses: actions/upload-artifact@v2
        with:
          name: loki_images_${{ matrix.loki_configuration }}_${{ matrix.loki_test_group }}
          path: .loki/*/*${{ matrix.loki_configuration }}/${{ matrix.loki_test_group }}*.*
        if: failure()
