name: publish npm packages

on:
  workflow_call:
    inputs:
      commit_sha:
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        required: true

jobs:
  publish-npm-packages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: download all artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-${{ inputs.commit_sha }}
          path: ./packages

      - name: Read .nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvmrc

      - name: setup node ${{ steps.nvmrc.outputs.NODE_VERSION }}
        uses: actions/setup-node@v5
        with:
          node-version: '${{ steps.nvmrc.outputs.NODE_VERSION }}'
          registry-url: 'https://registry.npmjs.org'

      # Github cache
      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: restore yarn cache
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-cache-folder-

      - name: restore lerna
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: yarn-node_modules-folder-${{ hashFiles('**/yarn.lock') }}          

      - name: install dependencies
        run: yarn

      - name: release npm packages
        run: yarn release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}