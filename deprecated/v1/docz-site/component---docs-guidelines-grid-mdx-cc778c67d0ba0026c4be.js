(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{loOD:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return m})),n.d(t,"default",(function(){return u}));var a=n("cxan"),i=n("+wNj"),l=(n("ERkP"),n("ZVZ0")),r=n("9Rvw"),o=n("vD+s"),b=n("vWOR"),c=n("j3+u"),s=(n("l1C2"),["components"]),m={};void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!Object.prototype.hasOwnProperty.call(m,"__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/guidelines/grid.mdx"}});var d={_frontmatter:m},p=r.a;function u(e){var t=e.components,n=Object(i.a)(e,s);return Object(l.b)(p,Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"grid"},"Grid"),Object(l.b)(o.a,{mdxType:"LargeParagraph"},"Helsinki Design System follows a 12 column grid system which scales across five defined breakpoints. Using pre-defined grid system helps to keep visual consistency and rhythm across your designs and implementations."),Object(l.b)(c.a,{label:"Note about HDS Grid values!",className:"siteNotification",mdxType:"Notification"},"HDS does not currently include an implementation of the grid. Grid is provided as specified breakpoints and other values which can be easily applied to most commonly used grid systems."),Object(l.b)("h2",{id:"principles"},"Principles"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"HDS uses standard 12 column grid which maximum width is 1200 pixels. Container width and the amount of columns changes each breakpoint."),Object(l.b)("li",{parentName:"ul"},"Larger screen sizes use 24 pixel gutters while on mobile screen widths they shrink to 16 pixels and eventually to 12 pixels in the smallest breakpoint."),Object(l.b)("li",{parentName:"ul"},"Even though HDS does not include grid implementation, it recommends and suggests methods how to handle changing amount of columns and column stacking. See ",Object(l.b)("a",{parentName:"li",href:"/v1/guidelines/grid#layout-columns"},"Layout columns")," for more information.",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"HDS also offers a Container component which helps to follow breakpoints and container widths. For more info refer to ",Object(l.b)("a",{parentName:"li",href:"/v1/design-tokens/breakpoints#usage"},"Breakpoints documentation"),".")))),Object(l.b)("h2",{id:"grid-behaviour"},"Grid behaviour"),Object(l.b)("p",null,"The following table presents how HDS grid behaves and changes in different breakpoints. Maximum container width, the number of columns and gutter size alter between breakpoints. Read more about ",Object(l.b)("a",{parentName:"p",href:"/v1/design-tokens/breakpoints#tokens"},"breakpoint and container width tokens"),"."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Breakpoint token"),Object(l.b)("th",{parentName:"tr",align:null},"Container-width token"),Object(l.b)("th",{parentName:"tr",align:null},"# of columns"),Object(l.b)("th",{parentName:"tr",align:null},"Margin (gutter) in px"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"--breakpoint-xs"),Object(l.b)("td",{parentName:"tr",align:null},"--container-width-xs"),Object(l.b)("td",{parentName:"tr",align:null},"4"),Object(l.b)("td",{parentName:"tr",align:null},"12")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"--breakpoint-s"),Object(l.b)("td",{parentName:"tr",align:null},"--container-width-s"),Object(l.b)("td",{parentName:"tr",align:null},"4"),Object(l.b)("td",{parentName:"tr",align:null},"16")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"--breakpoint-m"),Object(l.b)("td",{parentName:"tr",align:null},"--container-width-m"),Object(l.b)("td",{parentName:"tr",align:null},"8"),Object(l.b)("td",{parentName:"tr",align:null},"24")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"--breakpoint-l"),Object(l.b)("td",{parentName:"tr",align:null},"--container-width-l"),Object(l.b)("td",{parentName:"tr",align:null},"12"),Object(l.b)("td",{parentName:"tr",align:null},"24")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"--breakpoint-xl"),Object(l.b)("td",{parentName:"tr",align:null},"--container-width-xl"),Object(l.b)("td",{parentName:"tr",align:null},"12"),Object(l.b)("td",{parentName:"tr",align:null},"24")))),Object(l.b)(b.a,{src:"../../static/grid-breakpoint-demonstration.png",alt:"Breakpoint demonstration",style:{maxWidth:"100%"},viewable:!0,mdxType:"Image"}),Object(l.b)("h2",{id:"layout-columns"},"Layout columns"),Object(l.b)("h3",{id:"dividing-columns"},"Dividing columns"),Object(l.b)("p",null,"12 column grid can be divided into multiple smaller columns. Prefer simple and even column combinations to maintain visual consistency across all of screen sizes."),Object(l.b)(b.a,{src:"../../static/grid-layout-columns.png",alt:"Dividing columns to smaller columns",style:{maxWidth:"100%"},viewable:!0,mdxType:"Image"}),Object(l.b)("h3",{id:"column-stacking"},"Column stacking"),Object(l.b)("p",null,"When the breakpoint is reached, columns will stack starting from left. Developer or designer can also choose to alter column sizes if it helps to maintain clearer and more consistent view."),Object(l.b)(b.a,{src:"../../static/grid-column-stacking.png",alt:"When breakpoint changes, columns will stack to the next row starting from left",style:{maxWidth:"100%"},viewable:!0,mdxType:"Image"}))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!Object.prototype.hasOwnProperty.call(u,"__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/guidelines/grid.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-guidelines-grid-mdx-cc778c67d0ba0026c4be.js.map