@import '../../styles/common.scss';

.container {
  --common-spacing: var(--spacing-s);

  bottom: 0;
  left: 0;
  position: fixed;
  width: 100vw;
  z-index: 999;
}

.aligner {
  background: var(--color-white);
  border-top: 8px solid var(--color-bus);
  bottom: 0;
  max-height: 80vh;
  overflow-y: auto;
  position: absolute;
  width: 100%;
  z-index: 2;
}

.container .aligner {
  transform: translateY(100%);
  transition: transform 1s;
}

.container.animateIn .aligner {
  transform: translateY(0%);
}

.page {
  --common-spacing: var(--spacing-s);
}

.buttons {
  display: flex;
  flex-direction: column;
  width: 100%;

  & > :first-child {
    margin-right: var(--common-spacing);
  }
}

.buttons > * {
  margin: 0 0 var(--common-spacing) 0;
  width: 100%;
}

.emulatedH1 {
  composes: heading-l from 'hds-core/lib/utils/helpers.css';
  display: block;
  outline: none;
  padding: 0;

  &:focus {
    box-shadow: 0 0 0 var(--outline-width) var(--focus-outline-color);
    transform: translate3d(0, 0, 0);
  }
}

.emulatedH2 {
  composes: heading-m from 'hds-core/lib/utils/helpers.css';
  display: block;
  padding: 1.2em 0 0.5em;
}

.content {
  --focus-outline-color: var(--color-focus-outline);
  --outline-width: 3px;

  box-sizing: border-box;
  margin: 0 auto;
  padding-left: var(--spacing-layout-2-xs);
  padding-right: var(--spacing-layout-2-xs);
  padding-top: var(--common-spacing);
  position: relative;
  width: 100%;

  p,
  .emulatedH1,
  .emulatedH2 {
    max-width: 860px;
  }

  @media (min-width: 768px) {
    padding-left: var(--spacing-layout-xs);
    padding-right: var(--spacing-layout-xs);
  }

  @media (min-width: 1248px) {
    max-width: var(--container-width-xl);
    padding-left: 0;
    padding-right: 0;
  }
}

.page .content {
  padding-bottom: 0;
  padding-top: 0;
}

.languageSwitcher {
  left: calc(var(--common-spacing) - var(--spacing-3-xs));
  position: absolute;
  top: var(--common-spacing);
}

.languageDropdown {
  position: relative;
  right: unset;

  button {
    padding-top: 0;
  }

  &#{&} {
    --menu-button-focus-outline-color: var(--color-coat-of-arms);

    > div {
      left: 0;
      right: unset;
    }
  }
}

@media (max-width: 768px) {
  .languageDropdown {
    position: absolute;
  }
}

.mainContent,
.textContent {
  padding: 0;
}

.textContent > p {
  padding-bottom: var(--spacing-l);
}

.mainContent {
  padding-top: calc(var(--common-spacing) * 2);
}

.emulatedH2 + p {
  margin: 0;
}

.list {
  list-style: none;
  margin: 0;
  padding-left: 0;
}

.accordionButton {
  @extend %normalizedInput;

  align-items: center;
  background: transparent;
  border: none;
  color: var(--color-bus);
  color: var(--color-black-90);
  cursor: pointer;
  display: flex;
  outline: none;
  text-decoration: underline;
  text-decoration: none;

  &:focus {
    box-shadow: 0 0 0 var(--outline-width) var(--focus-outline-color);
    transform: translate3d(0, 0, 0);
  }
}

.detailsAccordionButton {
  margin-left: 3px;
  padding: var(--spacing-xs);
  padding-left: 0;
}

.detailsAccordionButton span {
  padding-left: var(--spacing-3-xs);
}

.accordionButtonSettingsClosed {
  margin-bottom: var(--common-spacing);
}

.consentCategory {
  display: flex;
  flex-direction: column;
  padding-bottom: var(--spacing-l);

  > p {
    margin-bottom: 0;
  }
}

.consentGroup {
  border-bottom: 1px solid var(--color-black);
  display: flex;
  flex-direction: column;
  margin-left: 0;
  padding: var(--spacing-m) 0;
  position: relative;
}

.consentGroupContent {
  display: flex;
  flex-direction: column;
  padding: 0;

  p {
    margin: 0;
    padding: var(--spacing-m) 0 0;
  }

  button {
    outline: none;
    padding: var(--spacing-3-xs);
    position: absolute;
    right: 0;
    top: var(--spacing-m);

    &:focus {
      box-shadow: 0 0 0 var(--outline-width) var(--focus-outline-color);
      transform: translate3d(0, 0, 0);
    }
  }
}

.titleWithCheckbox {
  display: flex;
  margin-right: var(--spacing-2-xl);
}

.page .content .consentCategory .titleWithCheckbox label,
.container .content .consentCategory .titleWithCheckbox label {
  color: var(--color-black);
  font-weight: 500;
}

.dataTableContainer {
  border-left: 1px solid var(--color-black);
  border-right: 1px solid var(--color-black);
  margin: var(--spacing-l) 0 var(--spacing-xs);
}

.dataTableContainer table tbody tr > * {
  min-width: 120px;
  vertical-align: top;
  width: 20%;
  word-break: break-word;
}

.dataTableContainer table tbody tr > *:nth-child(3) {
  width: 40%;
}

.saveNotification {
  margin-bottom: var(--spacing-xl);
}

.readMoreButton {
  display: none;
}

.shrinkOnBlur:not(:focus-within) {
  --common-spacing: var(--spacing-xs);

  outline: none;
  padding-bottom: var(--common-spacing);
  padding-top: var(--common-spacing);

  .visuallyHiddenWithoutFocus {
    clip-path: inset(0 0 0 0);
    display: block;
    height: 1px;
    left: -1000px;
    line-height: 0;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    width: 1px;
  }

  .hiddenWithoutFocus {
    display: none;
  }

  .mainContent {
    align-items: flex-start;
    display: flex;
    flex-direction: column;
    padding-top: 0;

    .emulatedH1 {
      font-size: var(--fontsize-heading-xs);
      letter-spacing: 0;
      line-height: var(--lineheight-l);
      margin-right: 0;
    }

    .readMoreButton {
      display: flex;
      padding: var(--common-spacing) 0 0;

      span {
        padding-right: var(--spacing-xs);
      }
    }
  }

  @media (min-width: 768px) {
    --common-spacing: var(--spacing-l);

    .mainContent {
      align-items: center;
      flex-direction: row;
      justify-content: space-between;

      .emulatedH1 {
        font-size: var(--fontsize-heading-s);
        letter-spacing: 0;
        line-height: var(--lineheight-l);
      }

      .readMoreButton {
        line-height: var(--fontsize-heading-s);
        padding: 0 var(--spacing-xs);
      }
    }
  }
}

@media (min-width: 768px) {
  .container,
  .page {
    --common-spacing: var(--spacing-l);
  }

  .languageSwitcher {
    left: unset;
    padding-top: 15px;
    right: var(--common-spacing);
    top: calc(var(--common-spacing) + 4px);
  }

  .mainContent {
    padding-top: 0;
  }

  .textContent > p {
    padding-bottom: var(--spacing-2-xl);
  }

  .content .emulatedH1 {
    margin-right: 200px;
  }

  .consentCategory {
    padding-bottom: var(--spacing-2-xl);
  }

  .consentGroup {
    margin-left: var(--spacing-s);
    padding: var(--spacing-l) 0;
  }

  .consentGroupContent {
    p {
      padding: var(--spacing-l) 0 0;
    }
  }

  .buttons {
    flex-direction: row;
  }

  .buttons > * {
    width: auto;
  }
}
