@import "../../../styles/common";
@import "../../button/button.common";
@import "../navigation.common";
@value x-small-down, small-down, small-only, medium-only, medium-up, large-only, large-up, x-large-only, x-large-up from "../../../styles/breakpoints.css";

%item {
  @extend %button;
  @extend %size-small;
  @extend %fullWidth;
  text-decoration: none;
}

.item {
  @extend %item;

  &:focus {
    transition: none;
  }
}

.primary {
  @extend %item;
  @extend %primary;
}

.secondary {
  @extend %item;
  @extend %secondary;
}

.supplementary {
  @extend %item;
  @extend %supplementary;
  --border-width: 3px;
}

.primary:focus,
.secondary:focus,
.supplementary:focus {
  transition: none;
}

.icon {
  @extend %icon;

  &#{&} {
    display: flex;
    height: unset;
    width: unset;
  }
}

.label {
  @extend %label;
  padding: 0;
}

// dropdown item styles
@import "../navigationDropdown/NavigationDropdown.module.scss";
@import "../navigationDropdownLink/NavigationDropdownLink.module.scss";

.rowItem,
.dropdownItem,
.dropdownLinkItem {
  align-items: center;
  box-sizing: border-box;
  color: inherit;
  display: flex;
  font-weight: 500;
  outline: none;
  text-decoration: none;
}

.rowItem {
  @extend %buttonReset;

  .icon {
    margin: 0 var(--spacing-2-xs) 0 calc(var(--spacing-3-xs) * -1);
  }

  .label {
    line-height: var(--lineheight-s);
    margin: 0;
  }
}

@media small-down {
  .rowItem {
    height: var(--spacing-xl);
    padding: var(--spacing-2-xs);

    &:focus {
      box-shadow: 0 0 0 var(--header-focus-outline-width) var(--item-focus-outline-color);
    }
  }

  .rowItem,
  .dropdownItem,
  .dropdownLinkItem {
    &:not(:first-child) {
      margin-top: var(--spacing-2-xs);
    }
  }

  .icon.icon {
    align-self: center;
  }
}

@media medium-up {
  .rowItem {
    padding: var(--spacing-3-xs);
    position: relative;
  }

  // focus outline
  .rowItem:focus::before,
  .dropdownItem:focus-within::before,
  .dropdownLinkItem button:focus-within::before {
    border-radius: 0;
    box-shadow: 0 0 0 var(--header-focus-outline-width) var(--item-focus-outline-color);
    content: '';
    height: calc(100% - var(--header-focus-outline-width) * 2);
    left: 0;
    pointer-events: none;
    position: absolute;
    top: 0;
    transform: translateY(calc(var(--header-focus-outline-width)));
    width: 100%;
    z-index: 1;
  }
  .dropdownLinkItem button {
    position: relative;
  }

  // focus outline - active
  .rowItem:active::before,
  .rowItem.active::before,
  .dropdownItem.active::before,
  .dropdownLinkItem.active::before {
    height: calc(100% - var(--item-focus-outline-height-adjust));
  }

  // active + hover styles
  .rowItem:hover:not(:focus)::after,
  .rowItem:active::after,
  .rowItem.active::after,
  .dropdownItem:hover:not(:focus-within)::after,
  .dropdownItem.active::after,
  .dropdownLinkItem:hover:not(:focus-within)::after,
  .dropdownLinkItem.active::after {
    background-color: var(--item-active-color);
    bottom: 0;
    content: '';
    height: var(--spacing-3-xs);
    left: 0;
    pointer-events: none;
    position: absolute;
    width: 100%;
  }

  .dropdownItem:not(.icon) {
    width: max-content;
  }

  .dropdownItem:not(.icon) {
    width: max-content;
  }
}

