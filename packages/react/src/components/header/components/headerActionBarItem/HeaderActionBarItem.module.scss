@use '../../Header.module.scss';
@use '../../../../styles/common.scss';

button.actionBarItem {
  align-self: center;
  appearance: none;
  background: transparent;
  border: none;
  color: var(--header-color);
  cursor: pointer;
  padding: 0;

  &:focus-visible {
    border: none;
    outline: var(--header-focus-outline-width) solid var(--header-focus-outline-color);
    outline-offset: var(--header-focus-outline-width);
  }
}

.actionBarItemIcon {
  display: block;
  height: var(--icon-size);
  margin: 0 auto;
  padding: 3px 0 0;
  pointer-events: none;
  width: var(--icon-size);

  & > svg {
    display: block;
    height: 100%;
    width: auto;
  }
}

.actionBarItemLabel {
  color: var(--action-bar-item-title-font-color);
  display: block;
  font-size: var(--action-bar-item-title-font-size);
  margin: 0 auto;
  pointer-events: none;
  white-space: nowrap;

  & > svg {
    display: block;
  }
}

.labelOnRight {
  display: inline-block;
}

.fixedRightPosition {
  display: block;
}

@mixin hiddenButTakingHorizontalSpace {
  height: 0;
  opacity: 0;
}

@mixin visibleAndTakingSpace {
  height: auto;
  opacity: 1;
}

.activeStateContent {
  @include hiddenButTakingHorizontalSpace;

  background-color: var(--actionbar-background-color);
}

.activeStateContentLabel {
  white-space: break-spaces;
}

.isActive {
  .activeStateContent {
    @include visibleAndTakingSpace;
  }

  > .actionBarItemIcon {
    display: none;
  }

  > .actionBarItemLabel {
    @include hiddenButTakingHorizontalSpace;
  }
}
