@import "../../styles/common.scss";
@import "../dropdown/dropdown.common.scss";


.root {
  @extend %dropdownRoot;

  --helper-color-default: var(--color-black-60);
}

/**
 * WRAPPER
 */
 .wrapper {
  @extend %dropdownWrapper;

  align-items: center;
  display: flex;
}

.buttons {
  composes: hds-search-input__buttons from 'hds-core/lib/components/search-input/search-input.css';
}

.button {
  color: var(--dropdown-color-default);
  composes: hds-search-input__button from 'hds-core/lib/components/search-input/search-input.css';

  &.hidden {
    @extend %hiddenFromScreen;
  }

  &:focus {
    outline: var(--focus-outline-width) solid var(--focus-outline-color);
  }
}

.searchIcon {
  color: var(--dropdown-color-default);
  display: flex;
}

.input {
  align-self: stretch;

  // Removes the input shadow on iOS
  appearance: none;
  background-color: var(--input-background-default);
  border: none;
  box-sizing: border-box;
  color: var(--input-color-default);
  font-size: var(--fontsize-body-l);
  height: var(--menu-item-height);

  // The focus is given to the wrapping element instead of this input
  // so we can hide the outline.
  outline: none;
  padding: 0 calc(var(--spacing-l) + var(--icon-size)) 0 0;
  width: 100%;

  // add left padding when there is no icon
  &:first-child {
    padding-left: var(--spacing-s);
  }

  &:not(:focus).hidden {
    @extend %hiddenFromScreen;
  }

  // don't add additional right padding if toggle button is hidden
  &.noToggle {
    padding-right: var(--spacing-s);
  }

  &::placeholder {
    color: var(--placeholder-color);
    line-height: normal;
  }

  &:disabled::placeholder {
    color: var(--dropdown-color-disabled);
  }
}

/**
 * MENU
 */
.menu {
  @extend %dropdownMenu;
}

/**
 * MENU ITEM
 */
.menuItem {
  @extend %dropdownMenuItem;

  .highlighted {
    font-weight: bold;

    mark {
      background: none;
      color: inherit;
      font-weight: normal;
    }
  }
}

.helperText {
  color: var(--helper-color-default);
  display: block;
  font-size: var(--fontsize-body-m);
  margin-top: var(--spacing-3-xs);
}

.loadingSpinnerContainer {
  @extend %dropdownMenu;

  align-items: center;
  background-color: var(--menu-item-background-default);
  display: flex;
  flex-direction: column;
  padding: var(--spacing-m) 0;
  text-align: center;
}

.loadingSpinner {
  margin-bottom: var(--spacing-2-xs);
}
